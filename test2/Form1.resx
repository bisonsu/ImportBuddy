<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>